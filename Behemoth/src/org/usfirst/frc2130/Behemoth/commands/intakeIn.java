// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc2130.Behemoth.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc2130.Behemoth.Robot;

/**
 *
 */
public class intakeIn extends Command {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
 
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
    public intakeIn() {

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_SETTING
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
        requires(Robot.intake);

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	// Turns on the intake and scoops up fuel faster than you could believe, value for speed can be changed
    	// and for testing in the "intake" subsystem.
    	Robot.intake.intakeGather();
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	// Reference oi to see which button this is, this part is only necessary for commands that run only while a button is 
    	// being held.
        return !Robot.oi.intakeButtonCall();
    }

    // Called once after isFinished returns true
    protected void end() {
    	// Allows the intake to coast to a stop.... however, we HAVE to check and be sure that the TalonSRX
    	// speed controllers are set to coast mode in the online interface.
    	Robot.intake.intakeStop();
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	this.end();
    }
}
